.row
  .span2 Rows
  .span10
    = @set["rows_total"]
    .muted  NOTE: if the dataset is large, it may take a while to render the graph
  .span2 
    | SQL  
    span.muted Click to edit
  .span10
    pre.prettyprint.js-sql.js-sql-edit.fake-link[data-toggle="tooltip" data-placement="top" title="Click to edit"]= @sql
    pre.prettyprint.js-sql style="display:none"
      textarea.span9.js-sql-textarea=@sql.downcase
      = link_to "Run Query", "#!",:class => "js-new-graph btn btn-primary"
      |  
      = link_to "Cancel", "#!", :class=> "js-sql-cancel"
.row
  .span12
    h4 
      | Y axes
      span.muted.text-tiny  (select as many as you'd like to add to graph, but note that strings are not selectable)
  .span12
    -if @x_axes.count == 0
      .alert
        p There are no selectable columns in this dataset. We can't graph strings. Sorries <strong>:(</strong>
        p You should refine your query to make your input strings or floats
    -else
      .row
        .span2
          =link_to "Select All", "#!", :class => 'js-select-all'
        .span2
          =link_to "Deselect All", "#!", :class => 'js-deselect-all'
  -@columns.each_with_index do |col_desc, i|
    .span2
      label.checkbox
        -disabled = ["System.String", "varchar", "string"].include? col_desc["dbtype"]
        -if disabled
          input[type="checkbox" disabled]
        -else
          input.js-y-axis-checkbox[type="checkbox" data-y-index=col_desc["name"]]
        span[class="#{disabled ? 'muted' : ''}"]=truncate(col_desc["name"], :length => 15)
        span.muted.text-tiny  (#{col_desc["dbtype"]})
  .span12
    .muted 
      | NOTE: You may want to look at the 
      =link_to "full data set", "#full-dataset"
      |  at the bottom of the page to make sure that there are no missing points, as the graph may not render correctly otherwise
  .span12
    h4
      | X axis
      span.muted.text-tiny  (select one)
  .span2
    select.js-x-axis-select
      option[selected data-x-index='index'] index
      -@x_axes.each_with_index do |axis, i|
        option= axis["name"]
  .span12
    .row
      .span1=link_to 'Generate', '#!', :class => 'js-generate-graph btn btn-primary', :disabled => true
      .span3
        select.js-graph-type
          option[data-type="scatterChart"]Scatter Plot
          option[data-type="lineWithFocusChart"] Line Chart With Zoom
          option[data-type="lineChart" data-log-enabled=true] Simple Line Chart
          option[data-type="multiBarChart"] Bar Chart
      .span4
        label.checkbox.js-log.muted
          input.js-y-log[type="checkbox" disabled]
          | Log scale Y 
          span.muted [Only available in Simple Line Chart]

.row
  #chart style="display:none"
    svg[style="height:600px"]

#full-dataset
  .row
    .span12
      h4 
        ' Full Data Set
        =link_to "(show)", '#!', :class => 'js-toggle-dataset'
        =link_to "(hide)", '#!', :class => 'js-toggle-dataset', :style => "display:none"
  .row
    .js-dataset style="display:none"
      -@data.each do |col|
        .span1
          .row
            h5.span1.text-center=col["key"]
            -col["values"].each do |datum|
              .text-center.span1="#{datum == "" ? '--' : datum}"

javascript:
  window.full_data = #{raw (@data.to_s.gsub("=>", ":").gsub("\"key\"", "key").gsub("\"values\"", "values")).gsub('nil', 'null')};
coffee:
  $ ->

    $('.js-toggle-dataset').click ->
      $('.js-toggle-dataset').toggle()
      $('.js-dataset').slideToggle()

    $('.js-y-axis-checkbox').click ->
      if $('.js-y-axis-checkbox:checked').length !=0 
        $('.js-generate-graph').removeAttr "disabled"
      else
        $('.js-generate-graph').attr "disabled", "disabled"

    find_in_full_data = (field_name) ->
      if field_name == "index"
        return [0...window.full_data[0].values.length]
      for column in window.full_data
        if column.key == field_name
          return column.values
      return []

    $('.js-generate-graph').click ->
      y_axes = []
      $(".js-y-axis-checkbox:checked").each ->
        y_axes.push $(this).data('y-index')
      x_axis = $('.js-x-axis-select').val()
      unless y_axes.length == 0
        x_values = find_in_full_data x_axis
        y_values = []
        for y_axis in y_axes
          y_values.push find_in_full_data y_axis
        data = []
        for i in [0 ... y_axes.length]
          data[i] = {key:y_axes[i], values:[]}
          for j in [0 ... x_values.length]
            x = parseFloat x_values[j]
            y = parseFloat y_values[i][j]
            data[i].values[j] = {x:x, y:y} 
        build_graph data
      

    build_graph = (data)->

      graph = eval "nv.models." + $('.js-graph-type option:selected').data("type");

      $("#chart > svg > *").remove()
      nv.graphs = []
      nv.charts = {}

      nv.addGraph -> 
        chart = graph()
        chart.yScale(d3.scale.log()) if $('.js-y-log:checked').length != 0
        d3.select('#chart svg').datum(data).transition().duration(500).call(chart);
        nv.utils.windowResize(chart.update);

        return chart;
      $("#chart").slideDown()

    $('.js-sql-edit, .js-sql-cancel').click ->
      $('.js-sql').toggle();

    $('.js-new-graph').click ->
      sql = $('.js-sql-textarea').val()
      $('.js-new-graph').attr "href", "/sql_share/dataset?url=/REST.svc/execute?sql=#{sql}&sample=false&auth=true"

    $('.js-graph-type').change -> 
      if $('.js-graph-type option:selected').data("log-enabled")
        $('.js-log').removeClass 'muted'
        $('.js-y-log').removeAttr 'disabled'
      else
        $('.js-log').addClass 'muted'
        $('.js-y-log').attr 'disabled', 'disabled'
        $('.js-y-log').prop 'checked', false

    group_by = false
    try
      group_by = $('.js-sql-edit').html().match(/group\W*by\W*\w*/g)[0].split(' ').pop()
    if group_by
      $('.js-x-axis-select').val(group_by)
      $('.js-y-axis-checkbox').not("[data-y-index=#{group_by}]").click()
      $('.js-generate-graph').click();      


    $('.js-select-all').click -> 
      $('.js-y-axis-checkbox').not(':disabled').prop 'checked', true
      $('.js-generate-graph').removeAttr "disabled"

    $('.js-deselect-all').click -> 
      $('.js-y-axis-checkbox').not(':disabled').prop 'checked', false
      $('.js-generate-graph').attr "disabled", "disabled"