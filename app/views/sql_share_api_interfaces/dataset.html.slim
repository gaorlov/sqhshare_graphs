- @graph_height ||= 600


.row
  -if @set["rows_total"] > 1000
    .span12
      .row
        .span1
          h5 Rows
        .span1
            h5= @set["rows_total"]
        .span5
          .alert This dataset is large; it may take a while to render the graph.
  .span1 
    | SQL 
    =link_to '', '#!', :class => "icon-external-link text-tiny js-show-link", :"data-toggle"=>"popover", :"data-placement"=>"bottom", :"data-content"=>"", :"data-original-title"=>"Link to this graph", :"data-html" => "true"
  .span11
    pre.prettyprint.js-sql.js-sql-edit.fake-link[data-toggle="tooltip" data-placement="top" title="Click to edit"]
      = @sql
      .muted Click to edit
    pre.prettyprint.js-sql style="display:none"
      textarea.span10.js-sql-textarea=@sql.downcase
      = link_to "Run Query", "#!",:class => "js-new-graph btn btn-primary"
      |  
      = link_to "Cancel", "#!", :class=> "js-sql-cancel"
.row
  .span12
    h3 Unselectable String Columns
  .span12
    .muted
      -@columns.each_with_index do |col_desc, i|
        -if ["System.String", "varchar", "string"].include? col_desc["dbtype"]
          =truncate(col_desc["name"], :length => 15)
          | , 
hr
.row
  .span12
    h3 Select X axis
  .span2
    select.js-x-axis-select
      option[selected data-x-index='index'] index
      -@x_axes.each_with_index do |axis, i|
        option= axis["name"]
hr
.row
  .span12
    h3 
      | Select Y axes
  .span12
    -if @x_axes.count == 0
      .alert.alert-error
        p There are no selectable columns in this dataset. We can't graph strings. Sorries <strong>:(</strong>
        p Refine your query to make your input strings floats.
  .span9
    .row
      -@columns.each_with_index do |col_desc, i|
        -unless ["System.String", "varchar", "string"].include? col_desc["dbtype"]
          .span2
            label.checkbox
              input.js-y-axis-checkbox[type="checkbox" data-y-index=col_desc["name"]]
              span=truncate(col_desc["name"], :length => 25)
  -if @x_axes.count != 0
    .span3
      =link_to "Select All", "#!", :class => 'js-select-all'
      |  | 
      =link_to "Deselect All", "#!", :class => 'js-deselect-all'
  .span12
    .muted 
      | NOTE: You may want to look at the 
      =link_to "full data set", "#full-dataset"
      |  at the bottom of the page to make sure that there are no missing points, as the graph may not render correctly otherwise.
hr
.row
  .span12
    h3 Select Chart Type
  .span3
    select.js-graph-type
      option[data-type="scatterChart"]Scatter Plot
      option[data-type="lineWithFocusChart"] Line Chart With Zoom
      option[data-type="lineChart" data-log-enabled=true] Simple Line Chart
      option[data-type="multiBarChart"] Bar Chart
  .span4
    label.checkbox.js-log.muted
      input.js-y-log[type="checkbox" disabled]
      | Log scale Y 
      span.muted (Only available in Simple Line Chart)
hr
.row
  .span12=link_to 'Generate', '#!', :class => 'js-generate-graph btn btn-primary btn-large', :disabled => true
hr  
.row
  .span12
    #chart style="display:none"
      h2
        | Graph 
        =link_to '', '#!', :class => "icon-external-link text-tiny js-show-link", :"data-toggle"=>"popover", :"data-placement"=>"bottom", :"data-content"=>"", :"data-original-title"=>"Link to this graph", :"data-html" => "true"
      svg[style="height:#{@graph_height}px;"]

#full-dataset
  .row
    .span12
      h3 
        ' Full Data Set
        =link_to "(show)", '#!', :class => 'js-toggle-dataset'
        =link_to "(hide)", '#!', :class => 'js-toggle-dataset', :style => "display:none"
  .row
    .js-dataset style="display:none"
      -@data.each do |col|
        .span1
          .row
            h5.span1.text-center=col["key"]
            -col["values"].each do |datum|
              .text-center.span1="#{datum == "" ? '--' : datum}"

javascript:
  window.full_data        = #{raw (@data.to_s.gsub("=>", ":").gsub("\"key\"", "key").gsub("\"values\"", "values")).gsub('nil', 'null')};
  window.graph_type       = #{raw @graph_type.inspect}
  window.selected_x_axis  = #{raw @selected_x_axis}
  window.selected_y_axes  = #{raw @selected_y_axes.to_s}
  window.render_on_load   = #{raw @render_on_load}
  window.sqlshare_path    = "#{raw @sqlshare_path}"
coffee:
  $ ->

    $('.js-toggle-dataset').click ->
      $('.js-toggle-dataset').toggle()
      $('.js-dataset').slideToggle()

    $('.js-y-axis-checkbox').click ->
      if $('.js-y-axis-checkbox:checked').length !=0 
        $('.js-generate-graph').removeAttr "disabled"
      else
        $('.js-generate-graph').attr "disabled", "disabled"

    find_in_full_data = (field_name) ->
      if field_name == "index"
        return [0...window.full_data[0].values.length]
      for column in window.full_data
        if column.key == field_name
          return column.values
      return []

    $('.js-generate-graph').click ->
      y_axes = []
      $(".js-y-axis-checkbox:checked").each ->
        y_axes.push $(this).data('y-index')
      x_axis = $('.js-x-axis-select').val()
      unless y_axes.length == 0
        x_values = find_in_full_data x_axis
        y_values = []
        for y_axis in y_axes
          y_values.push find_in_full_data y_axis
        data = []
        for i in [0 ... y_axes.length]
          data[i] = {key:y_axes[i], values:[]}
          for j in [0 ... x_values.length]
            x = parseFloat x_values[j]
            y = parseFloat y_values[i][j]
            data[i].values[j] = {x:x, y:y}
        build_graph data
      

    build_graph = (data)->

      graph = eval "nv.models." + $('.js-graph-type option:selected').data("type");

      $("#chart > svg > *").remove()
      nv.graphs = []
      nv.charts = {}

      nv.addGraph -> 
        chart = graph()
        chart.yScale(d3.scale.log()) if $('.js-y-log:checked').length != 0
        d3.select('#chart svg').datum(data).transition().duration(500).call(chart);
        nv.utils.windowResize(chart.update);

        return chart;
      $("#chart").slideDown()

    $('.js-sql-edit, .js-sql-cancel').click ->
      $('.js-sql').toggle();

    $('.js-new-graph').click ->
      sql = $('.js-sql-textarea').val()
      $('.js-new-graph').attr "href", "/sql_share/dataset?url=/REST.svc/execute?sql=#{sql}&sample=false&auth=true"

    $('.js-graph-type').change -> 
      if $('.js-graph-type option:selected').data("log-enabled")
        $('.js-log').removeClass 'muted'
        $('.js-y-log').removeAttr 'disabled'
      else
        $('.js-log').addClass 'muted'
        $('.js-y-log').attr 'disabled', 'disabled'
        $('.js-y-log').prop 'checked', false

    group_by = false
    try
      group_by = $('.js-sql-edit').html().match(/group\W*by\W*\w*/g)[0].split(' ').pop()
    if group_by && !window.render_on_load
      $('.js-x-axis-select').val(group_by)
      $('.js-y-axis-checkbox').not("[data-y-index=#{group_by}]").click()
      $('.js-generate-graph').click();      


    $('.js-select-all').click -> 
      $('.js-y-axis-checkbox').not(':disabled').prop 'checked', true
      $('.js-generate-graph').removeAttr "disabled"

    $('.js-deselect-all').click -> 
      $('.js-y-axis-checkbox').not(':disabled').prop 'checked', false
      $('.js-generate-graph').attr "disabled", "disabled"

    # url params selecting graph stuff
    if window.graph_type
      $('.js-graph-type').val(window.graph_type)
    if window.selected_x_axis
      $('.js-x-axis-select').val(window.selected_x_axis)
    if window.selected_y_axes
      $(window.selected_y_axes).each ->
        $("[data-y-index=#{this}]").click()
    if window.render_on_load
      $('.js-generate-graph').click();
      $('html, body').animate({
        scrollTop: $("#chart").offset().top + 20
        }, 500);

    # generate link from actions
    $('.js-x-axis-select, .js-y-axis-checkbox, .js-graph-type').change ->
      $(".js-show-link").attr "data-content", url_for_current_state(true)


    url_for_current_state = (html_wrapped = false) -> 
      y_axes = ""
      $(".js-y-axis-checkbox:checked").each ->
        y_axes += "\"#{$(this).attr 'data-y-index'}\","

      graph = switch $('.js-graph-type').val()
                when "Scatter Plot"
                  "scatter"
                when "Line Chart With Zoom"
                  "line_with_scale"
                when "Simple Line Chart"
                  "line"
                when "Bar Chart"
                  "bar"

      url = "#{window.location.origin}#{window.location.pathname}?url=#{window.sqlshare_path}&x_axis=\"#{$('.js-x-axis-select').val()}\"&y_axes=[#{y_axes}]&graph_type=#{graph}&render=true"
      if html_wrapped
        return "<textarea class='stripped-popover' type=\"text\" value=\"#{url}\" readonly=\"readonly\">#{url}</textarea>"
      else
        return url

    $(".js-show-link").attr "data-content", url_for_current_state(true)

